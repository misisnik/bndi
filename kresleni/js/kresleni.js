// Generated by CoffeeScript 1.10.0
(function() {
  window.__init__ = function() {
    window.width = 0;
    window.height = 0;
    window.pen_down = false;
    window.generated = false;
    window.color = ['white', '0111'];
    window.array = [];
    window.background = '0';
    window.load_source();
    window.change_color();
    window.menu();
    return window.code();
  };

  window.menu = function() {
    $('#fill').click(function() {
      var i, ref, results, x, y;
      $(".bod").css("background-color", "" + window.color[0]);
      $(".real_bod").css("background-color", "" + window.color[0]);
      if (window.width && window.height) {
        results = [];
        for (y = i = 0, ref = window.height - 1; i <= ref; y = i += 1) {
          results.push((function() {
            var j, ref1, results1;
            results1 = [];
            for (x = j = 0, ref1 = window.width - 1; j <= ref1; x = j += 1) {
              results1.push(window.array[y][x] = ["" + window.color[0], ("" + window.background) + ("" + window.color[1])]);
            }
            return results1;
          })());
        }
        return results;
      }
    });
    $('#is_background').click(function() {
      if (this.checked) {
        return window.background = "1";
      } else {
        return window.background = "0";
      }
    });
    $('#mirror').click(function() {
      var i, ref, results, x, y;
      if (window.height > 1 && window.width > 1) {
        results = [];
        for (y = i = 0, ref = window.height - 1; i <= ref; y = i += 1) {
          window.array[y].reverse();
          results.push((function() {
            var j, ref1, results1;
            results1 = [];
            for (x = j = 0, ref1 = window.width - 1; j <= ref1; x = j += 1) {
              if (window.array[y][x][1][0] === "1") {
                window.background = "1";
              } else {
                window.background = "0";
              }
              window.color[0] = "" + window.array[y][x][0];
              window.color[1] = "" + window.array[y][x][1];
              results1.push(window.action_draw(x, y, false));
            }
            return results1;
          })());
        }
        return results;
      }
    });
    return $('#rotate').click(function() {
      var i, ref, results, x, y;
      if (window.height > 1 && window.width > 1) {
        window.array.reverse();
        results = [];
        for (y = i = 0, ref = window.height - 1; i <= ref; y = i += 1) {
          results.push((function() {
            var j, ref1, results1;
            results1 = [];
            for (x = j = 0, ref1 = window.width - 1; j <= ref1; x = j += 1) {
              if (window.array[y][x][1][0] === "1") {
                window.background = "1";
              } else {
                window.background = "0";
              }
              window.color[0] = "" + window.array[y][x][0];
              window.color[1] = "" + window.array[y][x][1];
              results1.push(window.action_draw(x, y, false));
            }
            return results1;
          })());
        }
        return results;
      }
    });
  };

  window.load_source = function() {
    return $('#size_submit').click(function() {
      window.generated = false;
      window.width = $('#width').val();
      window.height = $('#height').val();
      return window.generate_array();
    });
  };

  window.detection_drawing = function() {
    $('body').mousedown(function() {
      return window.pen_down = true;
    }).mouseup(function() {
      return window.pen_down = false;
    });
    $('.bod').mouseenter(function() {
      var x, y;
      if (window.pen_down) {
        x = $(this).data('x');
        y = $(this).data('y');
        return window.action_draw(x, y);
      }
    });
    return $('.bod').click(function() {
      var x, y;
      x = $(this).data('x');
      y = $(this).data('y');
      return window.action_draw(x, y);
    });
  };

  window.action_draw = function(x, y, change) {
    if (change == null) {
      change = true;
    }
    $("#bl" + x + "_" + y).css("background-color", "" + window.color[0]);
    if (("" + window.background) === "1") {
      $("#bl" + x + "_" + y).css("opacity", "0.4");
      $("#bl" + x + "_" + y).css("border-style", "dashed");
    } else {
      $("#bl" + x + "_" + y).css("opacity", "1");
      $("#bl" + x + "_" + y).css("border-style", "solid");
    }
    $("#real_bl" + x + "_" + y).css("background-color", "" + window.color[0]);
    if (change) {
      return window.array[y][x] = ["" + window.color[0], "" + window.background + window.color[1]];
    }
  };

  window.getColorFromCode = function(code) {
    var color;
    switch (code) {
      case "000":
        return color = "black";
      case "001":
        return color = "blue";
      case "010":
        return color = "green";
      case "011":
        return color = "cyan";
      case "100":
        return color = "red";
      case "101":
        return color = "magenta";
      case "110":
        return color = "yellow";
      default:
        return color = "white";
    }
  };

  window.change_color = function() {
    return $('.pallete').click(function() {
      window.color[0] = $(this).data('color');
      window.color[1] = $(this).data('color-code');
      return $('.actual-color').css("background-color", "" + window.color[0]);
    });
  };

  window.code = function() {
    $('#get-code').click(function() {
      var i, j, len, len1, ref, text, x, y;
      $('#code').val("");
      text = "";
      ref = window.array;
      for (i = 0, len = ref.length; i < len; i++) {
        y = ref[i];
        for (j = 0, len1 = y.length; j < len1; j++) {
          x = y[j];
          text += '"' + ("" + x[1]) + '", ';
        }
        text += "\n";
      }
      if (text.length > 2) {
        text = text.substring(0, text.length - 3);
      }
      return $('#code').val(text);
    });
    return $('#get-picture').click(function() {
      var block, blocks, cb, clr, cr, data, i, j, len, len1, row;
      data = $("#code").val();
      data = data.replace(/ /g, "");
      data = data.replace(/,/g, "");
      data = data.replace(/"/g, "");
      data = data.split("\n");
      if (data.length > 0) {
        if (data[0].length % 4 === 0) {
          window.width = "" + (data[0].length / 4);
          if (data[-1 + data.length] === "") {
            window.height = "" + (-1 + data.length);
            data.pop();
          } else {
            window.height = "" + data.length;
          }
          $('#width').val("" + window.width);
          $('#height').val("" + window.height);
          window.generated = false;
          window.array = [];
          window.generate_array();
          cr = 0;
          for (i = 0, len = data.length; i < len; i++) {
            row = data[i];
            cb = 0;
            blocks = row.match(/.{1,4}/g);
            for (j = 0, len1 = blocks.length; j < len1; j++) {
              block = blocks[j];
              clr = window.getColorFromCode(block.slice(1));
              if (block[0] === "1") {
                window.background = "1";
              } else {
                window.background = "0";
              }
              window.color[0] = "" + clr;
              window.color[1] = "" + block.slice(1);
              window.action_draw(cb, cr);
              cb++;
            }
            cr++;
          }
        }
        window.color[0] = "white";
        window.color[1] = window.background + "111";
        return $('.actual-color').css("background-color", "" + window.color[0]);
      }
    });
  };

  window.generate_array = function() {
    var i, j, ref, ref1, x, y;
    if (!window.generated) {
      $("#drawing-block").empty();
      $("#real-image").empty();
      window.array = [];
      for (y = i = 0, ref = window.height - 1; i <= ref; y = i += 1) {
        window.array[y] = [];
        $("#drawing-block").append("<tr class='line' id='line_" + y + "'></tr>");
        $("#real-image").append("<tr class='real_line' id='real_line_" + y + "'></tr>");
        for (x = j = 0, ref1 = window.width - 1; j <= ref1; x = j += 1) {
          window.array[y][x] = ["white", "0111"];
          $("#line_" + y).append("<td id='bl" + x + "_" + y + "' data-x='" + x + "' data-y='" + y + "' class='bod'></td>");
          $("#real_line_" + y).append("<td id='real_bl" + x + "_" + y + "' data-x='" + x + "' data-y='" + y + "' class='real_bod'></td>");
        }
      }
      window.generated = true;
      return window.detection_drawing();
    }
  };

}).call(this);
